{"version":3,"sources":["components/NewMovie/NewMovie.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieKey","MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isTitle","setIsTitle","isImgUrl","setIsImgUrl","isImdbUrl","setIsImdbUrl","isImdbId","setIsImdbId","handleChange","event","target","name","value","Title","Description","ImgUrl","ImdbUrl","ImdbId","handleBlur","disabledButton","onSubmit","preventDefault","type","classNames","placeholder","onChange","onBlur","disabled","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8002c01.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/scss/bootstrap.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nenum MovieKey {\n  Title = 'title',\n  Description = 'description',\n  ImgUrl = 'imgUrl',\n  ImdbUrl = 'imdbUrl',\n  ImdbId = 'imdbId',\n}\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [isTitle, setIsTitle] = useState(true);\n  const [isImgUrl, setIsImgUrl] = useState(true);\n  const [isImdbUrl, setIsImdbUrl] = useState(true);\n  const [isImdbId, setIsImdbId] = useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case MovieKey.Title:\n        setTitle(value);\n        setIsTitle(true);\n        break;\n\n      case MovieKey.Description:\n        setDescription(value);\n        break;\n\n      case MovieKey.ImgUrl:\n        setImgUrl(value);\n        setIsImgUrl(true);\n        break;\n\n      case MovieKey.ImdbUrl:\n        setImdbUrl(value);\n        setIsImdbUrl(true);\n        break;\n\n      case MovieKey.ImdbId:\n        setImdbId(value);\n        setIsImdbId(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { name } = event.target;\n\n    switch (name) {\n      case MovieKey.Title:\n        if (!title) {\n          setIsTitle(false);\n        }\n\n        break;\n\n      case MovieKey.ImgUrl:\n        if (!imgUrl) {\n          setIsImgUrl(false);\n        }\n\n        break;\n\n      case MovieKey.ImdbUrl:\n        if (!imdbUrl) {\n          setIsImdbUrl(false);\n        }\n\n        break;\n\n      case MovieKey.ImdbId:\n        if (!imdbId) {\n          setIsImdbId(false);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      addMovie(movie);\n      resetForm();\n    }\n  };\n\n  const disabledButton = (!isTitle || !isImgUrl || !isImdbUrl || !isImdbId);\n\n  return (\n    <form\n      className=\"NewMovie mb-3 mt-3\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        name=\"title\"\n        className={classNames('form-control mb-4 shadow-none', {\n          'border border-danger': !isTitle,\n        })}\n        data-cy=\"form-title\"\n        placeholder=\"Add a title\"\n        value={title}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n\n      {!isTitle && <p>Please, enter the title</p>}\n\n      <input\n        type=\"text\"\n        name=\"description\"\n        className=\"form-control mb-4 shadow-none\"\n        data-cy=\"form-description\"\n        placeholder=\"Add a description\"\n        value={description}\n        onChange={handleChange}\n      />\n\n      <input\n        type=\"url\"\n        name=\"imgUrl\"\n        className={classNames('form-control mb-4 shadow-none', {\n          'border border-danger': !isImgUrl,\n        })}\n        data-cy=\"form-imgUrl\"\n        placeholder=\"Add an image's url\"\n        value={imgUrl}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n\n      {!isImgUrl && <p>Please, enter the url of image</p>}\n\n      <input\n        type=\"url\"\n        name=\"imdbUrl\"\n        className={classNames('form-control mb-4 shadow-none', {\n          'border border-danger': !isImdbUrl,\n        })}\n        data-cy=\"form-imdbUrl\"\n        placeholder=\"Add an IMDB url\"\n        value={imdbUrl}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n\n      {!isImdbUrl && <p>Please, enter the url of movie</p>}\n\n      <input\n        type=\"text\"\n        name=\"imdbId\"\n        className={classNames('form-control mb-4 shadow-none', {\n          'border border-danger': !isImdbId,\n        })}\n        data-cy=\"form-imdbId\"\n        placeholder=\"Add a movie's id\"\n        value={imdbId}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n\n      {!isImdbId && <p>Please, enter the id</p>}\n\n      <button\n        type=\"submit\"\n        className=\"d-block btn btn-primary\"\n        disabled={disabledButton}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((prevMovies) => ([...prevMovies, movie]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <h1>Add your movie</h1>\n\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}